spring.application.name=order-service
#spring.datasource.url=jdbc:mysql://localhost:33307/order_service
#spring.datasource.url=${MYSQL_URI}
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=none
server.port=8081

# container -e
spring.datasource.url=${MYSQL_URI:jdbc:mysql://localhost:33307/order_service}
inventory.url=${INVENTORY_URI:http://localhost:8085}
spring.kafka.bootstrap-servers=${KAFKA_URI:localhost:9092}
spring.kafka.producer.properties.schema.registry.url=${SCHEMA_REGISTRY_URI:http://127.0.0.1:8089}
loki.url=${LOKI_URI:http://localhost:3100/loki/api/v1/push}

#inventory.url=http://localhost:8085
#inventory.url=${INVENTORY_URI}
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Resilience4J Properties
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5

# Resilience4J TimeOut Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

# Resilience4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

# Kafka Properties
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=${KAFKA_URI}
spring.kafka.template.default-topic=order-placed
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.schema.registry.url=http://127.0.0.1:8089
#spring.kafka.producer.properties.schema.registry.url=${SCHEMA_REGISTRY_URI}


management.endpoints.web.exposure.include=*
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=order-service
management.tracing.sampling.probability=1.0
# Loki URL
#loki.url=http://localhost:3100/loki/api/v1/push
#loki.url=${LOKI_URI}